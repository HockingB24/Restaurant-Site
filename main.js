(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>c});var r=t(15),a=t.n(r),o=t(645),i=t.n(o)()(a());i.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Dancing+Script:wght@600&family=Montserrat&display=swap);"]),i.push([e.id,"body, html {\n    margin: 0;\n    padding: 0;\n    height: 100%;\n    font-family: 'Dancing Script', cursive;  \n}\n\np {\n    font-family: 'Montserrat', sans-serif;\n}\n\nbody {\n    background: rgb(255,74,46);\n    background: radial-gradient(circle, rgba(255,74,46,1) 0%, rgba(139,9,7,1) 100%);\n    background-repeat: no-repeat;\n    background-attachment: fixed;\n}\n.imgHome {\n   border-radius: 50%;\n}\n\n#content {\n    display: block;\n    margin: 100px auto 100px auto;\n    width: 50%;\n    text-align: center;\n    background-color: white;\n    border: 10px solid black;\n    padding: 50px;\n    color: #0C486A;\n}\n\n#nav-ul {\n    list-style-type: none;\n    margin: 0 0 10px 0;\n    padding: 0;\n    background-color: white;\n    border-bottom: 5px solid black;\n    overflow: hidden;\n    position: fixed;\n    top: 0;\n    width: 100%;\n\n}\n.nav-li {\n    float: left;\n    color: black;\n    text-align: center;\n    margin: 0;\n    padding: 10px 50px;\n    display: block;\n    background-color: white;\n}\n.nav-li:hover {\n    background-color: #e9e9e9;\n}\n\n\n.menuItem {\n    margin: 40px 0 40px 0;\n    padding: 10px 0;\n}\n\n.menuImg {\n    border: 5px solid black;\n}\n\n.imgHome {\n    border: 5px solid black;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AACA;IACI,SAAS;IACT,UAAU;IACV,YAAY;IACZ,sCAAsC;AAC1C;;AAEA;IACI,qCAAqC;AACzC;;AAEA;IACI,0BAA0B;IAC1B,+EAA+E;IAC/E,4BAA4B;IAC5B,4BAA4B;AAChC;AACA;GACG,kBAAkB;AACrB;;AAEA;IACI,cAAc;IACd,6BAA6B;IAC7B,UAAU;IACV,kBAAkB;IAClB,uBAAuB;IACvB,wBAAwB;IACxB,aAAa;IACb,cAAc;AAClB;;AAEA;IACI,qBAAqB;IACrB,kBAAkB;IAClB,UAAU;IACV,uBAAuB;IACvB,8BAA8B;IAC9B,gBAAgB;IAChB,eAAe;IACf,MAAM;IACN,WAAW;;AAEf;AACA;IACI,WAAW;IACX,YAAY;IACZ,kBAAkB;IAClB,SAAS;IACT,kBAAkB;IAClB,cAAc;IACd,uBAAuB;AAC3B;AACA;IACI,yBAAyB;AAC7B;;;AAGA;IACI,qBAAqB;IACrB,eAAe;AACnB;;AAEA;IACI,uBAAuB;AAC3B;;AAEA;IACI,uBAAuB;AAC3B",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Dancing+Script:wght@600&family=Montserrat&display=swap');\nbody, html {\n    margin: 0;\n    padding: 0;\n    height: 100%;\n    font-family: 'Dancing Script', cursive;  \n}\n\np {\n    font-family: 'Montserrat', sans-serif;\n}\n\nbody {\n    background: rgb(255,74,46);\n    background: radial-gradient(circle, rgba(255,74,46,1) 0%, rgba(139,9,7,1) 100%);\n    background-repeat: no-repeat;\n    background-attachment: fixed;\n}\n.imgHome {\n   border-radius: 50%;\n}\n\n#content {\n    display: block;\n    margin: 100px auto 100px auto;\n    width: 50%;\n    text-align: center;\n    background-color: white;\n    border: 10px solid black;\n    padding: 50px;\n    color: #0C486A;\n}\n\n#nav-ul {\n    list-style-type: none;\n    margin: 0 0 10px 0;\n    padding: 0;\n    background-color: white;\n    border-bottom: 5px solid black;\n    overflow: hidden;\n    position: fixed;\n    top: 0;\n    width: 100%;\n\n}\n.nav-li {\n    float: left;\n    color: black;\n    text-align: center;\n    margin: 0;\n    padding: 10px 50px;\n    display: block;\n    background-color: white;\n}\n.nav-li:hover {\n    background-color: #e9e9e9;\n}\n\n\n.menuItem {\n    margin: 40px 0 40px 0;\n    padding: 10px 0;\n}\n\n.menuImg {\n    border: 5px solid black;\n}\n\n.imgHome {\n    border: 5px solid black;\n}"],sourceRoot:""}]);const c=i},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t=e(n);return n[2]?"@media ".concat(n[2]," {").concat(t,"}"):t})).join("")},n.i=function(e,t,r){"string"==typeof e&&(e=[[null,e,""]]);var a={};if(r)for(var o=0;o<this.length;o++){var i=this[o][0];null!=i&&(a[i]=!0)}for(var c=0;c<e.length;c++){var l=[].concat(e[c]);r&&a[l[0]]||(t&&(l[2]?l[2]="".concat(t," and ").concat(l[2]):l[2]=t),n.push(l))}},n}},15:e=>{function n(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}e.exports=function(e){var t,r,a=(r=4,function(e){if(Array.isArray(e))return e}(t=e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,a,o=[],i=!0,c=!1;try{for(t=t.call(e);!(i=(r=t.next()).done)&&(o.push(r.value),!n||o.length!==n);i=!0);}catch(e){c=!0,a=e}finally{try{i||null==t.return||t.return()}finally{if(c)throw a}}return o}}(t,r)||function(e,t){if(e){if("string"==typeof e)return n(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?n(e,t):void 0}}(t,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=a[1],i=a[3];if(!i)return o;if("function"==typeof btoa){var c=btoa(unescape(encodeURIComponent(JSON.stringify(i)))),l="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(c),s="/*# ".concat(l," */"),d=i.sources.map((function(e){return"/*# sourceURL=".concat(i.sourceRoot||"").concat(e," */")}));return[o].concat(d).concat([s]).join("\n")}return[o].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var o={},i=[],c=0;c<e.length;c++){var l=e[c],s=r.base?l[0]+r.base:l[0],d=o[s]||0,u="".concat(s," ").concat(d);o[s]=d+1;var A=t(u),p={css:l[1],media:l[2],sourceMap:l[3]};-1!==A?(n[A].references++,n[A].updater(p)):n.push({identifier:u,updater:a(p,r),references:1}),i.push(u)}return i}function a(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap)return;t.update(e=n)}else t.remove()}}e.exports=function(e,a){var o=r(e=e||[],a=a||{});return function(e){e=e||[];for(var i=0;i<o.length;i++){var c=t(o[i]);n[c].references--}for(var l=r(e,a),s=0;s<o.length;s++){var d=t(o[s]);0===n[d].references&&(n[d].updater(),n.splice(d,1))}o=l}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r=t.css,a=t.media,o=t.sourceMap;a?e.setAttribute("media",a):e.removeAttribute("media"),o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleTagTransform(r,e)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(r){var a=n[r];if(void 0!==a)return a.exports;var o=n[r]={id:r,exports:{}};return e[r](o,o.exports,t),o.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{const e=()=>{const e=document.querySelector("#content");let n=document.createElement("img");n.src="https://imagesvc.meredithcorp.io/v3/mm/image?url=https%3A%2F%2Fstatic.onecms.io%2Fwp-content%2Fuploads%2Fsites%2F9%2F2018%2F02%2Fbarbuzzo-best-italian-restaurants-philly-FT-BLOG0218.jpg",n.alt="Spaghetti on a plate",n.setAttribute("width","400"),n.setAttribute("height","400"),n.classList.add("imgHome");let t=document.createElement("h1");t.innerHTML="Mama Mia's Italian Restaurante",t.classList.add("homeHead");let r=document.createElement("p");r.classList.add("homePara"),r.innerHTML="Welcome to our restaurant's website! We serve only the finest Italian food, with ingredients sourced straight from Italy. You're going to love our dishes!",e.appendChild(n),e.appendChild(t),e.appendChild(r)},n=(e,n,t,r)=>{document.querySelector("#content");let a=document.createElement("div"),o=document.createElement("img");o.src=e,o.alt=n,o.setAttribute("width","300"),o.setAttribute("height","300"),o.classList.add("menuImg");let i=document.createElement("h2");i.innerHTML=t;let c=document.createElement("p");return c.innerHTML=r,a.appendChild(o),a.appendChild(i),a.appendChild(c),a.classList.add("menuItem"),a};var r=t(379),a=t.n(r),o=t(795),i=t.n(o),c=t(569),l=t.n(c),s=t(565),d=t.n(s),u=t(216),A=t.n(u),p=t(589),m=t.n(p),f=t(426),h={};h.styleTagTransform=m(),h.setAttributes=d(),h.insert=l().bind(null,"head"),h.domAPI=i(),h.insertStyleElement=A(),a()(f.Z,h),f.Z&&f.Z.locals&&f.Z.locals;const g=()=>{let e=document.getElementById("content");for(;e.firstChild;)e.removeChild(e.firstChild);console.log("Done")};e();let b=document.querySelector("#home"),C=document.querySelector("#menu"),v=document.querySelector("#contact");b.addEventListener("click",(()=>{g(),e()})),C.addEventListener("click",(()=>{g(),(()=>{const e=document.querySelector("#content");let t=n("https://www.foodiecrush.com/wp-content/uploads/2017/09/My-Moms-Homemade-Spaghetti-and-Meat-Sauce-foodiecrush.com-017-683x1024-1.jpg","Spaghetti with Meatballs","Spaghetti with Meatballs","Spaghetti and Meatballs served with Pasta Sauce and Parmesan Cheese"),r=n("https://www.jessicagavin.com/wp-content/uploads/2017/07/meat-lasagna-1200.jpg","Lasagna","Lasagna with Ground Beef","Lasagna served with Ground Beef and Italian Sausage on the inside"),a=n("https://imagesvc.meredithcorp.io/v3/mm/image?url=https%3A%2F%2Fimages.media-allrecipes.com%2Fuserphotos%2F8135663.jpg","Fettucine Alfredo","Fettucine Alfredo","Dish of fettucine served in a sauce of cream, butter, and Parmesan cheese");e.appendChild(t),e.appendChild(r),content.appendChild(a)})()})),v.addEventListener("click",(()=>{g(),(()=>{const e=document.querySelector("#content");let n=document.createElement("p");n.innerHTML="111-222-1234";let t=document.createElement("p");t.innerHTML="realEmail@gmail.com";let r=document.createElement("p");r.innerHTML="123 Restaurante Drive, New York City, NY",e.appendChild(n),e.appendChild(t),e.appendChild(r)})()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,